# sample1mine.py

import pandas as pd
import os 

# #----------------------------------------------------------------#
# 1. 현재 작업 디렉토리 : 좌측 Explorer 에서,
#   Workspace 에 추가된 폴더가 / (root) 가 됨.
#----------------------------------------------------------------#
print('0. Current working dir:', os.getcwd())

#----------------------------------------------------------------#
# 2. CSV 데이터셋 파일을, 판다스의 데이터프레임(DataFrame)으로 불러옴
#----------------------------------------------------------------#
print('-' * 80)

df = pd.read_csv('doit_pandas/data/gapminder.tsv', sep = '\t') # df는 데이터프레임의 약자

print('1. df:', type(df))           # <class 'pandas.core.frame.DataFrame'>
print("2. df['country']:", type(df['country'])) # <class 'pandas.core.series.Series'>

# 시리즈 라고 하는 타입이 나옴 ! 
# 테이블안에 있는 특정 열을 가지고 끄집어 낼때는 위에 country 넣은것처럼 하는것임!!
# 리스트처럼 대괄호를 열고 이름을 지정해주면 됨 ! 

#----------------------------------------------------------------#
# 3. 데이터프레임 탐색하기
#----------------------------------------------------------------#
print('-' * 80)

#----------------------------------------------------------------#
# 3-1. 데이터프레임의 앞에서, 기본 5개 행 또는 지정된 행수만큼 출력
#----------------------------------------------------------------#
print(df.head())
print(df.tail())

print('-' * 80)

print(df.head(n=10)) # --> 실 데이터를 빠르게 보는 방법
# print(df.head(10))

print('-' * 80)

#----------------------------------------------------------------#
# 3-2. 데이터프레임의 뒤에서, 기본 5개 행 또는 지정된 행수만큼 출력
#----------------------------------------------------------------#
print(df.tail())            # by default, 5 rows displayed

print('-' * 80)

print(df.tail(n=10))
# print(df.tail(10))

#----------------------------------------------------------------#
# 3-3. head(), tail() method 의 반환값 : 데이터프레임
#----------------------------------------------------------------#
print('-' * 80)

print('3. df.head():', type(df.head()))  # <class 'pandas.core.frame.DataFrame'>
print('4. df.tail():', type(df.tail()))  # <class 'pandas.core.frame.DataFrame'>

#----------------------------------------------------------------#
# 3-4. head(), tail() method 의 반환값이 데이터프레임이므로, 
#       다시 하나의 컬럼(열)을 지정하면 시리즈가 됨
# 행과 열로 구성된 2차원 테이블 --> DataFrame
#----------------------------------------------------------------#
# <class 'pandas.core.series.Series'>
print("5. df.head()['pop']:", type(df.head()['pop'])) # head와 tail이 돌려주는 값을 알면 대괄호
# 안에 왜 pop 입력이 가능한지 앎.
# head tail로 돌려준게 데이터 프레임 값인데, 이거에 데이터 컬럼값 지정해주면 이게 시리즈가 됨,.
print("6. df.tail()['country']:", type(df.tail()['country']))

print('-' * 80)
print(df.head()['pop'])         # 하나의 시리즈(Series) 출력

print('-' * 80)
print(df.tail()['country'])     # 하나의 시리즈(Series) 출력

#----------------------------------------------------------------#
# 3-5. 데이터프레임의 shape 속성
#----------------------------------------------------------------#
#   - 데이터프레임의 차원(dimension, 즉, 행열의 크기) 정보 저장
#   - tuple type
#----------------------------------------------------------------#

