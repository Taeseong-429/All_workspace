# ------------------------------------------------------
# 0. 시계열 객체 생성을 위한, 행렬(Matrix) 생성
# ------------------------------------------------------

# 연습
( vec <- c(1,2,3,4, c(5,6,7))) # R에선 중첩된 구조 유지되지 않음.

######################
# 잠시 ts 연습
library(ggplot2)
nog[, c('hwy', 'cty')]
mpg.ts <- ts(mpg[, c('hwy', 'cty')], frequency = 1, start = c(2001, 1)) # mpg 데이터 변수 2개 선택해서 2001년 부터 1개씩 데이터 측정했다고 가정하고, 이걸로 시계열 데이터 만듦. hwy와 cty로 갖는 다변량 시계열 개체로 만들었음.
mpg.ts 
dimnames(mpg.ts)[[2]] # 계열의 이름을 출력. (내가봤을땐 변수같음)
dimnames(mpg.ts)[[2]][1] # 여기선 첫번째꺼 출력.
class(mpg.ts)

######################
# ------------------------------------------------------

dd <- matrix(
  data = c(
    c(1342, 1442, 1252, 1343),
    c(1425, 1362, 1456, 1272),
    c(1243, 1359, 1412, 1253),
    c(1201, 1478, 1322, 1406),
    c(1254, 1289, 1497, 1205)
  )
) # 이 값으로 구성되어 있는 하나의 매트릭스 생성. (아래 연습보면 알 수 있듯이 벡터 중첩 안됨. 그냥 기다랗게 데이터 생성됨) # 주기 데이터처럼 보이게 하려고 이렇게 쓴거.

View(dd)
dim(dd) # row와 col 개수 .

# ------------------------------------------------------
# 1. time-series object 객체 생성
# ------------------------------------------------------
# 20x1 차원을 가지는 matrix(행렬) -> Univariate time-series
# 만일, MxN 차원을 가지는 행렬(matrix) 이나 Dataframe을 넣으면
# -----> Multivariate time-series object
( dd.ts <- ts(data = dd, frequency = 4, start = c(2006, 1)) ) # 분기 데이터 생성.

attributes(dd.ts)

dim(dd.ts) # 차원정보 알려줌. # 열이 1개이니까 단변량 시계열 데이터.
dimnames(dd.ts) # 첫번째 시계열 ??
dimnames(dd.ts)[[1]] # 아래 연습 참고 dimnames 같은건.

start(dd.ts)
end(dd.ts)
frequency(dd.ts)
cycle(dd.ts) # 어떻게 배정되는지 확인.

# ------------------------------------------------------
# 3. Time-series 의 subset 추출
# ------------------------------------------------------
# TS (분기)에서, 2007년 2분기 ~ 2008년 3분기까지 자료(window) 떼어내기.

dd.win.ts <- window(x=dd.ts, start = c(2007, 2), end = c(2008, 3))
tsp(dd.win.ts) # 얘도 엄연한 별도의 타임 시리즈 데이터임.


# ------------------------------------------------------
# 1. 다변량 시계열 객체(Multivariate time-series) 생성
# ------------------------------------------------------
(zz <- ts(
  data = matrix(1:24, nrow = 8, ncol = 3, byrow = F),  # 8x3 행렬이고, byrow는 행 열 방향 설정정
  frequency = 4,
  start = c(2001, 1),
  names = c('A', 'B', 'C')
))

start(zz)
end(zz)
frequency(zz) # 연간인지 분기인지 월간인지 확인인
cycle(zz)
tsp(zz)
dimnames(zz)[[2]]


# ------------------------------------------------------
# 2. 다변ㅇ랑~ 탐색
# ------------------------------------------------------


# ------------------------------------------------------
# 3. 다변량 시계열(Multivariate time-series)에서 특정 Time-Series 추출방
# ------------------------------------------------------
( TS_A <- zz[, 'A'] )           # A time-series 만 추출 
( TS_B <- zz[, 'B'] )           # B time-series 만 추출





# ------------------------------------------------------
# 4. 두 시계열 객체의 산술연산
# ------------------------------------------------------

TS_A + TS_B
TS_A - TS_B
TS_A * TS_B
TS_A / TS_B

# ------------------------------------------------------
#  
# ------------------------------------------------------
plot(Nile)

plot(zz, main = 'zz plot')

par(las = 1) # 숫자 0 ~ 3 까지 숫자에 따라 라벨명 생김새 달라짐..

# Multivariate time-series virtualization

# ------------------------------------------------------
# 5. 시계열 객체(Multivariate time-series 시각화)
# ------------------------------------------------------
??List

ts.plot(zz, 
        gpars = list(
  main = '- Multivariate time-seires -',
  xlab = 'Time',
  ylab = 'zz',
  lty = c(1:3), lwd = c(1:3)
))
dev.off()
# 범례 설정 ! 
legend(
  'bottomright',
  c('A', 'B', 'C'),
  lty = 1:3,
  col = c('red', 'green', 'blue')
)

dd.ts
